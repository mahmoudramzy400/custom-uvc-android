// publish_aar.gradle  (NO `plugins {}` here)

if (!project.plugins.hasPlugin('maven-publish')) {
    apply plugin: 'maven-publish'
}

ext {
    PUBLISH_GROUP_ID    = 'com.github.mahmoudramzy400'
    PUBLISH_VERSION     = project.findProperty('PUBLISH_VERSION') ?: 'v1.0.0-flutter'
    PUBLISH_ARTIFACT_ID = project.findProperty('PUBLISH_ARTIFACT_ID') ?: project.name
}

// -------- ANDROID LIBRARIES --------
plugins.withId('com.android.library') {
    // Make AGP expose a publishable "release" variant + sources
    android {
        publishing {
            singleVariant("release") {
                withSourcesJar()
                // withJavadocJar() // optional
            }
        }
    }

    // Register the Maven publication after Android components exist
    afterEvaluate {
        publishing {
            publications {
                create("release", MavenPublication) {
                    groupId    = PUBLISH_GROUP_ID
                    artifactId = PUBLISH_ARTIFACT_ID
                    version    = PUBLISH_VERSION
                    from components.release
                }
            }
        }
    }
}

// -------- JAVA / KOTLIN (non-Android) LIBRARIES --------
plugins.withId('java-library') {
    java { withSourcesJar() }
    publishing {
        publications {
            create("mavenJava", MavenPublication) {
                groupId    = PUBLISH_GROUP_ID
                artifactId = PUBLISH_ARTIFACT_ID
                version    = PUBLISH_VERSION
                from components.java
            }
        }
    }
}

// If a module uses plain 'java' (not 'java-library'), handle it too
plugins.withId('java') {
    if (!project.plugins.hasPlugin('java-library')) {
        java { withSourcesJar() }
        publishing {
            publications {
                create("mavenJava", MavenPublication) {
                    groupId    = PUBLISH_GROUP_ID
                    artifactId = PUBLISH_ARTIFACT_ID
                    version    = PUBLISH_VERSION
                    from components.java
                }
            }
        }
    }
}
